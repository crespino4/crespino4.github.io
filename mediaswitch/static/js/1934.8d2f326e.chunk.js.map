{"version":3,"file":"static/js/1934.8d2f326e.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/after-next-render-ed0f7dcd.js","../node_modules/genesys-spark-components/dist/esm/en-46223eb1.js","../node_modules/genesys-spark-components/dist/esm/event-is-from-90b69768.js","../node_modules/genesys-spark-components/dist/esm/gux-tab-advanced-list.entry.js","../node_modules/genesys-spark-components/dist/esm/on-mutation-9b53a0da.js"],"sourcesContent":["function afterNextRender(callback) {\n  requestAnimationFrame(() => requestAnimationFrame(callback));\n}\nfunction afterNextRenderTimeout(callback, delay = 100) {\n  return setTimeout(callback, delay);\n}\n\nexport { afterNextRenderTimeout as a, afterNextRender as b };\n","const createNewTab = \"Create New Tab\";\nconst scrollLeft = \"Scroll Left\";\nconst scrollRight = \"Scroll Right\";\nconst options = \"Tab Options for {tabTitle}\";\nconst disableNewTab = \"Maximum number of tabs created has been reached\";\nconst toggleSort = \"Toggle sort mode using space\";\nconst sortModeOn = \"Sort mode on, use the left and right arrow keys to reorder tabs. Press space or enter key to complete sort. Press escape key to cancel sort\";\nconst sortComplete = \"Sort complete\";\nconst sortCancelled = \"Sort cancelled\";\nconst tabsResources = {\n\tcreateNewTab: createNewTab,\n\tscrollLeft: scrollLeft,\n\tscrollRight: scrollRight,\n\toptions: options,\n\tdisableNewTab: disableNewTab,\n\ttoggleSort: toggleSort,\n\tsortModeOn: sortModeOn,\n\tsortComplete: sortComplete,\n\tsortCancelled: sortCancelled\n};\n\nexport { tabsResources as t };\n","/**\n * Checks to see if an event originated within an element matching a specific selector.\n */\nfunction eventIsFrom(selector, event) {\n  // Don't search for matches above the node where we captured the event;\n  const exitTarget = event.currentTarget;\n  // Start with the oringal event target\n  let checkTarget = event.target;\n  while (checkTarget !== exitTarget && checkTarget !== null) {\n    if (checkTarget.matches(selector)) {\n      return true;\n    }\n    else {\n      checkTarget = checkTarget.parentElement;\n    }\n  }\n  return false;\n}\n\nexport { eventIsFrom as e };\n","import { r as registerInstance, c as createEvent, d as readTask, w as writeTask, h, g as getElement } from './index-816e34d8.js';\nimport { S as Sortable } from './sortable.esm-8c3d5856.js';\nimport { O as OnMutation } from './on-mutation-9b53a0da.js';\nimport { e as eventIsFrom } from './event-is-from-90b69768.js';\nimport { a as afterNextRenderTimeout } from './after-next-render-ed0f7dcd.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport { t as tabsResources } from './en-46223eb1.js';\nimport './get-closest-element-1597503c.js';\n\nconst guxTabAdvancedListCss = \"gux-tab-advanced-list .gux-tab-container{display:flex;align-items:flex-end;width:100%;height:50px;margin-bottom:16px;overflow-x:auto;overflow-y:hidden;background-color:#f6f7f9;border-bottom:1px solid #d7dce5;border-radius:4px 4px 0 0}gux-tab-advanced-list .gux-tab-container .action-button-container{display:flex;border-radius:4px}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button{min-width:35px;height:50px;padding:0;margin-left:2px;color:#2e394c;background-color:#e2e6ee;border:none;border-radius:4px;transition:color 0.25s}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button [slot='add-tab']{display:inline-flex;align-items:center;padding:0 12px;white-space:nowrap;font-size:12px;line-height:20px;font-family:Roboto, sans-serif;font-weight:400;font-weight:700}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button [slot='add-tab'] gux-icon{padding-right:8px}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button:disabled{opacity:0.5}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button:hover{background-color:#d7dce5}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button:active{background-color:#c8cfda}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button:focus-visible{outline:none;box-shadow:inset 0 0 0 3px #aac9ff}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button:focus-visible{border-radius:5px;outline:none;box-shadow:inset 0 0 0 3px #aac9ff}gux-tab-advanced-list .gux-tab-container .action-button-container .add-tab-button gux-icon{width:16px;height:16px}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container{display:flex;border-radius:4px}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button{display:flex;align-items:center;justify-content:center;width:28px;height:50px;padding:0;color:#2e394c;background-color:#e2e6ee;border:none;border-radius:4px;transition:color 0.25s}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button:focus-visible{border:3px solid #aac9ff;border-radius:5px;outline:none}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button gux-icon{width:16px;height:16px}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button:focus-visible{border:3px solid #aac9ff;outline:none}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button:hover{background-color:#d7dce5}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button:active{background-color:#c8cfda}gux-tab-advanced-list .gux-tab-container .action-button-container .gux-scroll-button-container .gux-scroll-button:focus-visible{outline:3px solid #aac9ff;outline-offset:1px;box-shadow:0 0 0 1px #fdfdfd}gux-tab-advanced-list .gux-tab-container .gux-scrollable-section{display:flex;align-items:flex-end;height:50px;overflow-x:auto;scroll-behavior:smooth;scrollbar-width:none}gux-tab-advanced-list .gux-tab-container .gux-scrollable-section::-webkit-scrollbar{height:0}gux-tab-advanced-list .gux-sr-only{position:absolute;top:auto;left:-10000px;width:1px;height:1px;overflow:hidden}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst GuxTabAdvancedList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.newTab = createEvent(this, \"newTab\", 7);\n    this.sortChanged = createEvent(this, \"sortChanged\", 7);\n    this.showNewTabButton = true;\n    this.tabLimit = Infinity;\n    this.allowSort = true;\n    this.focused = 0;\n    this.disableAddTabButton = false;\n    this.tabTriggers = undefined;\n    this.hasScrollbar = false;\n    this.keyboardSort = false;\n    this.initialSortIndex = 0;\n    this.sortTarget = undefined;\n    this.ariaLiveAlert = '';\n  }\n  onFocusin(event) {\n    if (this.allowSort &&\n      eventIsFrom('.gux-scrollable-section', event) &&\n      !this.keyboardSort) {\n      this.ariaLiveAlert = 'toggleSort';\n    }\n  }\n  onFocusout(event) {\n    if (!this.root\n      .querySelector('.gux-scrollable-section')\n      .contains(event.relatedTarget)) {\n      this.tabTriggers.forEach((tabTrigger, index) => {\n        void tabTrigger.guxGetActive().then(activeElement => {\n          if (activeElement) {\n            this.focused = index;\n          }\n          else {\n            tabTrigger\n              .querySelector('.gux-tab-button')\n              .setAttribute('tabindex', '-1');\n            if (tabTrigger.querySelector('.gux-tab-options-button')) {\n              tabTrigger\n                .querySelector('.gux-tab-options-button')\n                .setAttribute('tabindex', '-1');\n            }\n          }\n        });\n      });\n    }\n  }\n  watchAllowSort(allowSort) {\n    if (allowSort) {\n      this.validateSortableInstance();\n    }\n    else {\n      this.destroySortable();\n    }\n  }\n  onMutation() {\n    this.setTabTriggers();\n  }\n  onKeydown(event) {\n    switch (event.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        event.preventDefault();\n        if (this.keyboardSort &&\n          !eventIsFrom('.gux-tab-options-button', event)) {\n          this.ariaLiveAlert = '';\n          const parentNode = this.root.querySelector('.gux-scrollable-section');\n          const allNodes = parentNode.querySelectorAll('gux-tab-advanced');\n          const targetNodeIndex = Array.prototype.indexOf.call(allNodes, this.sortTarget);\n          let insertBeforeTab;\n          if (targetNodeIndex === allNodes.length - 1) {\n            insertBeforeTab = allNodes[0];\n          }\n          else {\n            insertBeforeTab = allNodes[targetNodeIndex + 2];\n          }\n          parentNode.insertBefore(this.sortTarget, insertBeforeTab);\n          this.tabTriggers = this.root.querySelectorAll('gux-tab-advanced');\n          this.tabTriggers.forEach((tabTrigger, index) => {\n            var _a;\n            const active = tabTrigger.tabId ===\n              ((_a = this.sortTarget) === null || _a === void 0 ? void 0 : _a.getAttribute('tab-id'));\n            if (active) {\n              this.focused = index;\n            }\n          });\n          this.focusTab(this.focused);\n        }\n        else if (!eventIsFrom('.gux-tab-options-button', event) &&\n          !eventIsFrom('.gux-dropdown-option-container', event)) {\n          this.handleKeyboardScroll('forward');\n        }\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        event.preventDefault();\n        if (this.keyboardSort &&\n          !eventIsFrom('.gux-tab-options-button', event)) {\n          this.ariaLiveAlert = '';\n          const parentNode = this.root.querySelector('.gux-scrollable-section');\n          const allNodes = parentNode.querySelectorAll('gux-tab-advanced');\n          const targetNodeIndex = Array.prototype.indexOf.call(allNodes, this.sortTarget);\n          const insertBeforeTab = allNodes[targetNodeIndex - 1] || null;\n          parentNode.insertBefore(this.sortTarget, insertBeforeTab);\n          this.tabTriggers = this.root.querySelectorAll('gux-tab-advanced');\n          this.tabTriggers.forEach((tabTrigger, index) => {\n            var _a;\n            const active = tabTrigger.tabId ===\n              ((_a = this.sortTarget) === null || _a === void 0 ? void 0 : _a.getAttribute('tab-id'));\n            if (active) {\n              this.focused = index;\n            }\n          });\n          this.focusTab(this.focused);\n        }\n        else if (!eventIsFrom('.gux-tab-options-button', event) &&\n          !eventIsFrom('.gux-dropdown-option-container', event)) {\n          this.handleKeyboardScroll('backward');\n        }\n        break;\n      case 'Escape':\n        event.preventDefault();\n        if (this.keyboardSort && this.allowSort) {\n          this.keyboardSort = false;\n          this.ariaLiveAlert = 'sortCancelled';\n          const parentNode = this.root.querySelector('.gux-scrollable-section');\n          const allNodes = this.tabTriggers;\n          const targetNodeIndex = this.initialSortIndex;\n          const insertBeforeTab = allNodes[targetNodeIndex] || null;\n          parentNode.insertBefore(this.sortTarget, insertBeforeTab);\n        }\n        this.tabTriggers = this.root.querySelectorAll('gux-tab-advanced');\n        this.tabTriggers.forEach((tabTrigger, index) => {\n          var _a;\n          const active = tabTrigger.tabId ===\n            ((_a = this.sortTarget) === null || _a === void 0 ? void 0 : _a.getAttribute('tab-id'));\n          if (active) {\n            this.focused = index;\n          }\n        });\n        this.focusTab(this.initialSortIndex);\n        afterNextRenderTimeout(() => {\n          this.focusTab(this.initialSortIndex);\n        });\n        break;\n      case 'Enter':\n        if (this.keyboardSort) {\n          event.preventDefault();\n          this.keyboardSort = false;\n          this.ariaLiveAlert = 'sortComplete';\n          this.tabTriggers = this.root.querySelectorAll('gux-tab-advanced');\n          this.tabTriggers.forEach((tabTrigger, index) => {\n            var _a;\n            const active = tabTrigger.tabId ===\n              ((_a = this.sortTarget) === null || _a === void 0 ? void 0 : _a.getAttribute('tab-id'));\n            if (active) {\n              this.focused = index;\n            }\n          });\n          this.emitSortChanged();\n        }\n        break;\n      case 'Tab':\n        if (this.keyboardSort) {\n          this.keyboardSort = false;\n          this.ariaLiveAlert = 'sortCancelled';\n        }\n        break;\n      case 'Home':\n        event.preventDefault();\n        this.focusTab(0);\n        break;\n      case 'End':\n        event.preventDefault();\n        this.focusTab(this.tabTriggers.length - 1);\n        break;\n    }\n  }\n  onKeyup(event) {\n    switch (event.key) {\n      case ' ':\n        if (eventIsFrom('.gux-tab', event) &&\n          !eventIsFrom('.gux-tab-options-button', event) &&\n          !eventIsFrom('gux-popover-list', event) &&\n          this.allowSort) {\n          event.preventDefault();\n          if (this.keyboardSort === true) {\n            this.keyboardSort = false;\n            this.ariaLiveAlert = 'sortComplete';\n            this.tabTriggers = this.root.querySelectorAll('gux-tab-advanced');\n            this.tabTriggers.forEach((tabTrigger, index) => {\n              var _a;\n              const active = tabTrigger.tabId ===\n                ((_a = this.sortTarget) === null || _a === void 0 ? void 0 : _a.getAttribute('tab-id'));\n              if (active) {\n                this.focused = index;\n              }\n            });\n            this.focusTab(this.focused);\n            this.emitSortChanged();\n          }\n          else {\n            this.keyboardSort = true;\n            this.sortTarget = event.target.parentNode.parentNode;\n            this.tabTriggers.forEach((tabTrigger, index) => {\n              var _a;\n              const active = tabTrigger.tabId ===\n                ((_a = this.sortTarget) === null || _a === void 0 ? void 0 : _a.getAttribute('tab-id'));\n              if (active) {\n                this.initialSortIndex = index;\n              }\n            });\n            this.ariaLiveAlert = 'sortModeOn';\n          }\n        }\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async guxSetActive(activeTab) {\n    this.tabTriggers.forEach((tabTrigger, index) => {\n      const active = tabTrigger.tabId === activeTab;\n      void tabTrigger.guxSetActive(active);\n      if (active) {\n        this.focused = index;\n      }\n    });\n  }\n  focusTab(tabIndex) {\n    this.focused = tabIndex;\n    this.tabTriggers.forEach((tabTrigger, index) => {\n      void tabTrigger.guxGetActive().then(activeElement => {\n        if (this.focused !== index && !activeElement) {\n          tabTrigger\n            .querySelector('.gux-tab-button')\n            .setAttribute('tabindex', '-1');\n          if (tabTrigger.querySelector('.gux-tab-options-button')) {\n            tabTrigger\n              .querySelector('.gux-tab-options-button')\n              .setAttribute('tabindex', '-1');\n          }\n        }\n      });\n    });\n    this.tabTriggers[this.focused]\n      .querySelector('button')\n      .setAttribute('tabindex', '0');\n    if (this.tabTriggers[this.focused].querySelector('.gux-tab-options-button')) {\n      this.tabTriggers[this.focused]\n        .querySelector('.gux-tab-options-button')\n        .setAttribute('tabindex', '0');\n    }\n    void this.tabTriggers[this.focused].guxFocus();\n  }\n  setTabTriggers() {\n    this.tabTriggers = this.root.querySelectorAll('gux-tab-advanced');\n    if (this.tabTriggers) {\n      this.triggerIds = Array.from(this.tabTriggers)\n        .map(trigger => `gux-${trigger.getAttribute('tab-id')}-tab`)\n        .join(' ');\n    }\n    else {\n      this.triggerIds = '';\n    }\n  }\n  createSortable() {\n    this.sortableInstance = new Sortable(this.root.querySelector('.gux-scrollable-section'), {\n      animation: 250,\n      draggable: 'gux-tab-advanced',\n      filter: '.ignore-sort',\n      onMove: (event) => {\n        return !event.related.classList.contains('ignore-sort');\n      },\n      onUpdate: () => {\n        this.emitSortChanged();\n      }\n    });\n  }\n  destroySortable() {\n    if (this.sortableInstance) {\n      this.sortableInstance.destroy();\n      this.sortableInstance = null;\n    }\n  }\n  emitSortChanged() {\n    const tabIds = Array.from(this.root.querySelectorAll('gux-tab-advanced')).map(tabElement => tabElement.tabId);\n    this.sortChanged.emit(tabIds);\n  }\n  checkForScrollbarHideOrShow() {\n    readTask(() => {\n      const el = this.root.querySelector('.gux-scrollable-section');\n      const hasScrollbar = el.clientWidth < el.scrollWidth;\n      if (hasScrollbar !== this.hasScrollbar) {\n        this.hasScrollbar = hasScrollbar;\n      }\n    });\n  }\n  handleKeyboardScroll(direction) {\n    if (direction === 'forward') {\n      if (this.focused < this.tabTriggers.length - 1) {\n        if (this.hasScrollbar) {\n          this.scrollRight();\n        }\n        this.focusTab(this.focused + 1);\n      }\n      else {\n        if (this.hasScrollbar) {\n          this.scrollToStart();\n        }\n        this.focusTab(0);\n      }\n    }\n    else if (direction === 'backward') {\n      if (this.focused > 0) {\n        if (this.hasScrollbar) {\n          this.scrollLeft();\n        }\n        this.focusTab(this.focused - 1);\n      }\n      else {\n        if (this.hasScrollbar) {\n          this.scrollToEnd();\n        }\n        this.focusTab(this.tabTriggers.length - 1);\n      }\n    }\n  }\n  disconnectedCallback() {\n    if (this.sortableInstance) {\n      this.destroySortable();\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.root.querySelector('.gux-tab-container'));\n    }\n    if (this.domObserver) {\n      this.domObserver.disconnect();\n    }\n  }\n  async componentWillLoad() {\n    this.setTabTriggers();\n    this.i18n = await buildI18nForComponent(this.root, tabsResources, 'gux-tabs-advanced');\n  }\n  validateSortableInstance() {\n    if (this.allowSort && !this.sortableInstance) {\n      this.createSortable();\n    }\n  }\n  componentDidLoad() {\n    this.validateSortableInstance();\n    if (!this.resizeObserver && window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.checkForScrollbarHideOrShow());\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(this.root.querySelector('.gux-scrollable-section'));\n    }\n    if (!this.domObserver && window.MutationObserver) {\n      this.domObserver = new MutationObserver(() => this.checkForScrollbarHideOrShow());\n    }\n    if (this.domObserver) {\n      this.domObserver.observe(this.root, {\n        childList: true,\n        attributes: false,\n        subtree: true\n      });\n    }\n    afterNextRenderTimeout(() => {\n      this.checkForScrollbarHideOrShow();\n    }, 500);\n  }\n  scrollLeft() {\n    writeTask(() => {\n      var _a;\n      this.root\n        .querySelector('.gux-scrollable-section')\n        .scrollBy(-((_a = this.root.querySelector('gux-tab-advanced')) === null || _a === void 0 ? void 0 : _a.scrollWidth), 0);\n    });\n  }\n  scrollRight() {\n    writeTask(() => {\n      var _a;\n      this.root\n        .querySelector('.gux-scrollable-section')\n        .scrollBy((_a = this.root.querySelector('gux-tab-advanced')) === null || _a === void 0 ? void 0 : _a.scrollWidth, 0);\n    });\n  }\n  scrollToStart() {\n    const scrollableSection = this.root.querySelector('.gux-scrollable-section');\n    writeTask(() => {\n      scrollableSection === null || scrollableSection === void 0 ? void 0 : scrollableSection.scrollBy(-(scrollableSection === null || scrollableSection === void 0 ? void 0 : scrollableSection.scrollWidth), 0);\n    });\n  }\n  scrollToEnd() {\n    const scrollableSection = this.root.querySelector('.gux-scrollable-section');\n    writeTask(() => {\n      scrollableSection.scrollBy(scrollableSection === null || scrollableSection === void 0 ? void 0 : scrollableSection.scrollWidth, 0);\n    });\n  }\n  componentWillRender() {\n    const tabs = Array.from(this.root.querySelectorAll('gux-tab-advanced'));\n    this.disableAddTabButton = tabs.length >= this.tabLimit;\n  }\n  render() {\n    const AddNewTabButton = (props) => {\n      return (h(\"button\", { title: this.disableAddTabButton\n          ? this.i18n('disableNewTab')\n          : this.root.querySelector('[slot=\"add-tab\"]')\n            ? this.root.querySelector('[slot=\"add-tab\"]').textContent.trim()\n            : this.i18n('createNewTab'), class: \"add-tab-button\", onClick: () => props.onClick(), disabled: this.disableAddTabButton }, h(\"slot\", { name: \"add-tab\" }, h(\"gux-icon\", { \"icon-name\": \"add\", decorative: true }))));\n    };\n    return [\n      h(\"span\", { class: \"gux-sr-only gux-aria-live-region\", \"aria-live\": \"polite\" }, this.ariaLiveAlert ? this.i18n(this.ariaLiveAlert) : ''),\n      h(\"div\", { class: \"gux-tab-container\" }, h(\"div\", { class: \"action-button-container\" }, this.renderScrollButton('scrollLeft')), h(\"div\", { role: \"tablist\", class: `gux-scrollable-section ${this.keyboardSort ? 'gux-tab-sorting' : ''}`, \"aria-owns\": this.triggerIds }, h(\"slot\", null)), h(\"div\", { class: \"action-button-container\" }, this.renderScrollButton('scrollRight'), this.showNewTabButton ? (h(AddNewTabButton, { onClick: () => this.newTab.emit() })) : null))\n    ];\n  }\n  renderScrollButton(direction) {\n    return (h(\"div\", { class: \"gux-scroll-button-container\" }, this.hasScrollbar ? (h(\"button\", { tabindex: \"-1\", title: this.i18n(direction), \"aria-label\": this.i18n(direction), class: \"gux-scroll-button\", onDragOver: () => this.getScrollDirection(direction), onClick: () => this.getScrollDirection(direction) }, h(\"gux-icon\", { \"icon-name\": this.getChevronIconName(direction), decorative: true }))) : null));\n  }\n  getScrollDirection(direction) {\n    switch (direction) {\n      case 'scrollLeft':\n        this.scrollLeft();\n        break;\n      case 'scrollRight':\n        this.scrollRight();\n        break;\n    }\n  }\n  getChevronIconName(direction) {\n    switch (direction) {\n      case 'scrollLeft':\n        return 'chevron-left';\n      case 'scrollRight':\n        return 'chevron-right';\n    }\n  }\n  get root() { return getElement(this); }\n  static get watchers() { return {\n    \"allowSort\": [\"watchAllowSort\"]\n  }; }\n};\n__decorate([\n  OnMutation({ childList: true, subtree: true })\n], GuxTabAdvancedList.prototype, \"onMutation\", null);\nGuxTabAdvancedList.style = guxTabAdvancedListCss;\n\nexport { GuxTabAdvancedList as gux_tab_advanced_list };\n","import { g as getElement } from './index-816e34d8.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nfunction OnMutation(options) {\n  return (proto, methodName) => {\n    const { connectedCallback, disconnectedCallback } = proto;\n    const store = new Map();\n    proto.connectedCallback = function () {\n      const method = this[methodName];\n      const observer = new MutationObserver(method.bind(this));\n      registerObserver(store, this, observer, options);\n      return connectedCallback && connectedCallback.call(this);\n    };\n    proto.disconnectedCallback = function () {\n      deregisterObserver(store, this);\n      return disconnectedCallback && disconnectedCallback.call(this);\n    };\n  };\n}\nfunction registerObserver(store, key, observer, options) {\n  if (store.has(key)) {\n    store.get(key).disconnect();\n  }\n  store.set(key, observer);\n  observer.observe(getElement(key), options);\n}\nfunction deregisterObserver(store, key) {\n  if (store.has(key)) {\n    store.get(key).disconnect();\n  }\n  store.delete(key);\n}\n\nexport { OnMutation as O };\n"],"names":["afterNextRender","callback","requestAnimationFrame","afterNextRenderTimeout","setTimeout","arguments","length","undefined","tabsResources","createNewTab","scrollLeft","scrollRight","options","disableNewTab","toggleSort","sortModeOn","sortComplete","sortCancelled","eventIsFrom","selector","event","exitTarget","currentTarget","checkTarget","target","matches","parentElement","__decorate","decorators","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GuxTabAdvancedList","constructor","hostRef","registerInstance","this","newTab","createEvent","sortChanged","showNewTabButton","tabLimit","Infinity","allowSort","focused","disableAddTabButton","tabTriggers","hasScrollbar","keyboardSort","initialSortIndex","sortTarget","ariaLiveAlert","onFocusin","onFocusout","root","querySelector","contains","relatedTarget","forEach","tabTrigger","index","guxGetActive","then","activeElement","setAttribute","watchAllowSort","validateSortableInstance","destroySortable","onMutation","setTabTriggers","onKeydown","preventDefault","parentNode","allNodes","querySelectorAll","targetNodeIndex","Array","prototype","indexOf","call","insertBeforeTab","insertBefore","_a","tabId","getAttribute","focusTab","handleKeyboardScroll","emitSortChanged","onKeyup","guxSetActive","activeTab","active","tabIndex","guxFocus","triggerIds","from","map","trigger","concat","join","createSortable","sortableInstance","Sortable","animation","draggable","filter","onMove","related","classList","onUpdate","destroy","tabIds","tabElement","emit","checkForScrollbarHideOrShow","readTask","el","clientWidth","scrollWidth","direction","scrollToStart","scrollToEnd","disconnectedCallback","resizeObserver","unobserve","domObserver","disconnect","componentWillLoad","i18n","buildI18nForComponent","componentDidLoad","window","ResizeObserver","observe","MutationObserver","childList","attributes","subtree","writeTask","scrollBy","scrollableSection","componentWillRender","tabs","render","h","class","renderScrollButton","role","props","title","textContent","trim","onClick","disabled","name","decorative","tabindex","onDragOver","getScrollDirection","getChevronIconName","getElement","watchers","OnMutation","style","proto","methodName","connectedCallback","store","Map","method","observer","bind","has","get","set","registerObserver","delete","deregisterObserver"],"sourceRoot":""}