{"version":3,"file":"static/js/8030.1a0184f4.chunk.js","mappings":"8KAEA,MAEMA,EAAkB,MACtBC,WAAAA,CAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,WAAQC,EACbF,KAAKG,cAAWD,EAChBF,KAAKI,UAAOF,EACZF,KAAKK,cAAWH,CAClB,CACAI,qBAAAA,GACON,KAAKO,uBAAuBC,aACnC,CAMAC,YAAAA,CAAaC,GACX,OAAKA,EAGEC,QAAQC,SAASZ,KAAKI,KAAKS,cAAcC,WAAWJ,EAAYG,gBAF9DF,QAAQC,SAAQ,EAG3B,CACAL,oBAAAA,GACE,OAAOP,KAAKe,KAAKC,QAAQ,sBAC3B,CACAC,iBAAAA,GACOjB,KAAKI,OACRJ,KAAKI,KAAOJ,KAAKe,KAAKG,YAE1B,CACAC,QAAAA,GACE,MAAO,CACLC,SAAU,IAEd,CACAC,gBAAAA,GACE,OAAQC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAOvB,KAAKI,OAAQkB,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,IAAKC,GAAOzB,KAAK0B,YAAcD,EAAKE,MAAO,CAAEC,QAAS,UAAYN,EAAAA,EAAAA,GAAE,OAAQ,OAAQtB,KAAKI,KAC9I,CACA,QAAIW,GAAS,OAAOc,EAAAA,EAAAA,GAAW7B,KAAO,CACtC,mBAAW8B,GAAa,MAAO,CAC7B,SAAY,CAAC,yBACZ,CACHC,MAAAA,GAAW,OAAOT,EAAAA,EAAAA,GAAEU,EAAAA,EAAMhC,KAAKmB,WAAYnB,KAAKqB,mBAAqB,GAEvEzB,EAAgB+B,MA9CK,mG","sources":["../node_modules/genesys-spark-components/dist/esm/gux-option-legacy.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement, H as Host } from './index-816e34d8.js';\n\nconst guxOptionCss = \"gux-option-legacy gux-text-highlight mark{font-weight:700;color:inherit;background-color:inherit}\";\n\nconst GuxOptionLegacy = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.value = undefined;\n    this.disabled = undefined;\n    this.text = undefined;\n    this.selected = undefined;\n  }\n  updateParentSelection() {\n    void this.getParentGuxDropdown().setSelected();\n  }\n  /**\n   * Determines if the search input matches this option.\n   *\n   * @param searchInput The input string being searched for.\n   */\n  shouldFilter(searchInput) {\n    if (!searchInput) {\n      return Promise.resolve(false);\n    }\n    return Promise.resolve(!this.text.toLowerCase().startsWith(searchInput.toLowerCase()));\n  }\n  getParentGuxDropdown() {\n    return this.root.closest('gux-dropdown-legacy');\n  }\n  componentWillLoad() {\n    if (!this.text) {\n      this.text = this.root.textContent;\n    }\n  }\n  hostData() {\n    return {\n      tabindex: '0'\n    };\n  }\n  __stencil_render() {\n    return (h(\"div\", { title: this.text }, h(\"span\", { ref: el => (this.slotContent = el), style: { display: 'none' } }, h(\"slot\", null)), this.text));\n  }\n  get root() { return getElement(this); }\n  static get watchers() { return {\n    \"selected\": [\"updateParentSelection\"]\n  }; }\n  render() { return h(Host, this.hostData(), this.__stencil_render()); }\n};\nGuxOptionLegacy.style = guxOptionCss;\n\nexport { GuxOptionLegacy as gux_option_legacy };\n"],"names":["GuxOptionLegacy","constructor","hostRef","registerInstance","this","value","undefined","disabled","text","selected","updateParentSelection","getParentGuxDropdown","setSelected","shouldFilter","searchInput","Promise","resolve","toLowerCase","startsWith","root","closest","componentWillLoad","textContent","hostData","tabindex","__stencil_render","h","title","ref","el","slotContent","style","display","getElement","watchers","render","Host"],"sourceRoot":""}