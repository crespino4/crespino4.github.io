{"version":3,"file":"static/js/8778.9ab0f428.chunk.js","mappings":"kLAEA,MAEMA,EAAqB,MACzBC,WAAAA,CAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,UAAOC,EACZF,KAAKG,aAAUD,EACfF,KAAKI,YAAa,CACpB,CACA,eAAIC,GACF,OAAOL,KAAKI,WAAa,WAAa,EACxC,CACAE,MAAAA,GACE,OAAQC,EAAAA,EAAAA,GAAE,SAAU,CAAE,aAAcP,KAAKG,QAASK,MAAOR,KAAKK,cAAeE,EAAAA,EAAAA,GAAE,WAAY,CAAEE,YAAY,EAAM,YAAaT,KAAKC,OACnI,GAEFL,EAAmBc,MAhBW,64E","sources":["../node_modules/genesys-spark-components/dist/esm/gux-side-panel-button.entry.js"],"sourcesContent":["import { r as registerInstance, h } from './index-816e34d8.js';\n\nconst guxSidePanelButtonCss = \"gux-side-panel-button button{width:48px;height:48px;color:#2e394c;cursor:pointer;background-color:#fdfdfd;border:none;border-bottom:1px solid #e2e6ee}gux-side-panel-button button.selected{color:#fdfdfd;background-color:#2a60c8}gux-side-panel-button button:hover,gux-side-panel-button button:active,gux-side-panel-button button:focus-visible{color:#2a60c8}gux-side-panel-button button:hover.selected,gux-side-panel-button button:active.selected,gux-side-panel-button button:focus-visible.selected{color:#fdfdfd}gux-side-panel-button button:focus{outline:none}gux-side-panel-button button i{font-size:24px}.gux-side-panel-button-dark-theme button{color:#fdfdfd;background-color:#2e394c;border-color:#202937}.gux-side-panel-button-dark-theme button.selected{background-color:#2a60c8}.gux-side-panel-button-dark-theme button:hover,.gux-side-panel-button-dark-theme button:active,.gux-side-panel-button-dark-theme button:focus-visible{color:#75a8ff}.gux-side-panel-button-dark-theme button:hover.selected,.gux-side-panel-button-dark-theme button:active.selected,.gux-side-panel-button-dark-theme button:focus-visible.selected{color:#fdfdfd}.gux-dark-theme gux-side-panel-button button{color:#fdfdfd;background-color:#2e394c;border-color:#202937}.gux-dark-theme gux-side-panel-button button.selected{background-color:#2a60c8}.gux-dark-theme gux-side-panel-button button:hover,.gux-dark-theme gux-side-panel-button button:active,.gux-dark-theme gux-side-panel-button button:focus-visible{color:#75a8ff}.gux-dark-theme gux-side-panel-button button:hover.selected,.gux-dark-theme gux-side-panel-button button:active.selected,.gux-dark-theme gux-side-panel-button button:focus-visible.selected{color:#fdfdfd}gux-side-panel-button.gux-dark-theme button{color:#fdfdfd;background-color:#2e394c;border-color:#202937}gux-side-panel-button.gux-dark-theme button.selected{background-color:#2a60c8}gux-side-panel-button.gux-dark-theme button:hover,gux-side-panel-button.gux-dark-theme button:active,gux-side-panel-button.gux-dark-theme button:focus-visible{color:#75a8ff}gux-side-panel-button.gux-dark-theme button:hover.selected,gux-side-panel-button.gux-dark-theme button:active.selected,gux-side-panel-button.gux-dark-theme button:focus-visible.selected{color:#fdfdfd}.gux-side-panel-button-light-theme{color:#2e394c}.gux-light-theme gux-side-panel-button{color:#2e394c}gux-side-panel-button.gux-light-theme{color:#2e394c}gux-side-panel-button{color:#2e394c}\";\n\nconst GuxSidePanelButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.icon = undefined;\n    this.altText = undefined;\n    this.isSelected = false;\n  }\n  get buttonClass() {\n    return this.isSelected ? 'selected' : '';\n  }\n  render() {\n    return (h(\"button\", { \"aria-label\": this.altText, class: this.buttonClass }, h(\"gux-icon\", { decorative: true, \"icon-name\": this.icon })));\n  }\n};\nGuxSidePanelButton.style = guxSidePanelButtonCss;\n\nexport { GuxSidePanelButton as gux_side_panel_button };\n"],"names":["GuxSidePanelButton","constructor","hostRef","registerInstance","this","icon","undefined","altText","isSelected","buttonClass","render","h","class","decorative","style"],"sourceRoot":""}