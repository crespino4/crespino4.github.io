{"version":3,"file":"static/js/1654.b11efef8.chunk.js","mappings":"0MAGA,MAAMA,EAAgB,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAKIC,EAAiB,MACrBC,WAAAA,CAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,WAAQC,CACf,CACAC,aAAAA,CAAcC,GACZ,MAAMC,EAAqBD,EAAME,OACjCN,KAAKC,MAAQI,EAAmBE,MAChCP,KAAKQ,MAAMD,MAAQF,EAAmBE,MACtCP,KAAKQ,MAAMC,cAAc,IAAIC,MAAM,QAAS,CAC1CC,SAAS,EACTC,YAAY,KAEdZ,KAAKQ,MAAMC,cAAc,IAAIC,MAAM,SAAU,CAC3CC,SAAS,IAEb,CACAE,iBAAAA,GACEb,KAAKQ,MAAQR,KAAKc,KAAKC,cAAc,uBACrCf,KAAKC,MAAQD,KAAKQ,MAAMD,KAC1B,CACAS,MAAAA,GACE,MAAO,EACLC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,QAAQ,IAAQD,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,KAAM,YAC7CF,EAAAA,EAAAA,GAAE,MAAO,MAAMA,EAAAA,EAAAA,GAAE,MAAO,CAAEG,MAAO,0BAA4BpB,KAAKqB,uBAEtE,CACAA,kBAAAA,GACE,OAAO1B,EAAc2B,KAAI,CAACrB,EAAOsB,KAAWN,EAAAA,EAAAA,GAAE,yBAA0B,CAAEO,IAAK,GAAFC,OAAKxB,EAAK,KAAAwB,OAAIF,GAAShB,MAAON,EAAOyB,OAAQ1B,KAAKC,MAAM0B,gBAAkB1B,EAAM0B,iBAC/J,CACA,QAAIb,GAAS,OAAOc,EAAAA,EAAAA,GAAW5B,KAAO,GAExCJ,EAAeiC,MAlCW,wgBAoC1B,MAEMC,EAAsB,MAC1BjC,WAAAA,CAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAK+B,aAAcC,EAAAA,EAAAA,GAAYhC,KAAM,cAAe,GACpDA,KAAK0B,YAASxB,EACdF,KAAKO,WAAQL,CACf,CACAc,MAAAA,GACE,OAAQC,EAAAA,EAAAA,GAAE,SAAU,CAAEgB,KAAM,SAAU1B,MAAOP,KAAKO,MAAOa,MAAOpB,KAAK0B,OAAS,gCAAkC,GAAIQ,UAAWlC,KAAKO,MAAOsB,MAAO7B,KAAKO,OAAS,CAAE,mBAAoBP,KAAKO,OAAS4B,MAAOnC,KAAKO,MAAO6B,QAASpC,KAAKqC,0BAA0BC,KAAKtC,OACtQ,CACAqC,yBAAAA,GACErC,KAAK+B,YAAYQ,KAAKvC,KAAKO,MAC7B,GAEFuB,EAAoBD,MAhBW,0mB","sources":["../node_modules/genesys-spark-components/dist/esm/gux-color-select_2.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement, c as createEvent } from './index-816e34d8.js';\n\n// Default color values\nconst defaultColors = [\n  '#203B73',\n  '#75A8FF',\n  '#8452CF',\n  '#1DA8B3',\n  '#B5B5EB',\n  '#CC3EBE',\n  '#5E6782',\n  '#FF8FDD',\n  '#868C1E',\n  '#DDD933'\n];\n\nconst guxColorSelectCss = \"gux-color-select{display:inline-block;color:#2e394c}gux-color-select>div{box-sizing:border-box;padding:20px 0 12px;margin-top:2px;background-color:#f6f7f9;border:1px solid #b4bccb;border-radius:4px;box-shadow:0 2px 4px rgba(32, 41, 55, 0.24)}gux-color-select .gux-input-color-matrix{display:flex;flex-wrap:wrap;align-content:flex-start;width:120px;padding:0 20px 8px;margin:0}gux-color-select .gux-input-color-matrix>*{display:none}gux-color-select .gux-input-color-matrix>gux-input-color-option{display:inline-block}\";\n\nconst GuxColorSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.color = undefined;\n  }\n  onColorSelect(event) {\n    const colorOptionElement = event.target;\n    this.color = colorOptionElement.value;\n    this.input.value = colorOptionElement.value;\n    this.input.dispatchEvent(new Event('input', {\n      bubbles: true,\n      cancelable: true\n    }));\n    this.input.dispatchEvent(new Event('change', {\n      bubbles: true\n    }));\n  }\n  componentWillLoad() {\n    this.input = this.root.querySelector('input[slot=\"input\"]');\n    this.color = this.input.value;\n  }\n  render() {\n    return [\n      h(\"div\", { hidden: true }, h(\"slot\", { name: \"input\" })),\n      h(\"div\", null, h(\"div\", { class: \"gux-input-color-matrix\" }, this.renderDefaultTiles()))\n    ];\n  }\n  renderDefaultTiles() {\n    return defaultColors.map((color, index) => (h(\"gux-input-color-option\", { key: `${color}-${index}`, value: color, active: this.color.toLowerCase() === color.toLowerCase() })));\n  }\n  get root() { return getElement(this); }\n};\nGuxColorSelect.style = guxColorSelectCss;\n\nconst guxInputColorOptionCss = \"gux-input-color-option{color:#2e394c}gux-input-color-option>button{display:inline-block;flex:0 0 16px;width:16px;height:16px;padding:0;margin:4px;font-size:0;line-height:0;cursor:pointer;border:none}gux-input-color-option>button:not(:disabled):hover,gux-input-color-option>button:focus-visible,gux-input-color-option>button.gux-input-color-option-active,gux-input-color-option>button:active{border:1px white solid;outline:1px solid #2a60c8}gux-input-color-option>button:disabled{cursor:default;background-color:#fdfdfd;border:1px solid #2e394c;opacity:0.5}gux-input-color-option button::-moz-focus-inner{border:none}\";\n\nconst GuxInputColorOption = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.colorSelect = createEvent(this, \"colorSelect\", 7);\n    this.active = undefined;\n    this.value = undefined;\n  }\n  render() {\n    return (h(\"button\", { type: \"button\", value: this.value, class: this.active ? 'gux-input-color-option-active' : '', disabled: !this.value, style: this.value && { 'background-color': this.value }, title: this.value, onClick: this.onColorOptionClickHandler.bind(this) }));\n  }\n  onColorOptionClickHandler() {\n    this.colorSelect.emit(this.value);\n  }\n};\nGuxInputColorOption.style = guxInputColorOptionCss;\n\nexport { GuxColorSelect as gux_color_select, GuxInputColorOption as gux_input_color_option };\n"],"names":["defaultColors","GuxColorSelect","constructor","hostRef","registerInstance","this","color","undefined","onColorSelect","event","colorOptionElement","target","value","input","dispatchEvent","Event","bubbles","cancelable","componentWillLoad","root","querySelector","render","h","hidden","name","class","renderDefaultTiles","map","index","key","concat","active","toLowerCase","getElement","style","GuxInputColorOption","colorSelect","createEvent","type","disabled","title","onClick","onColorOptionClickHandler","bind","emit"],"sourceRoot":""}