{"version":3,"file":"static/js/8417.87d3efc8.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/after-next-render-ed0f7dcd.js","../node_modules/genesys-spark-components/dist/esm/en-107673f2.js","../node_modules/genesys-spark-components/dist/esm/gux-pagination-buttons-beta_2.entry.js"],"sourcesContent":["function afterNextRender(callback) {\n  requestAnimationFrame(() => requestAnimationFrame(callback));\n}\nfunction afterNextRenderTimeout(callback, delay = 100) {\n  return setTimeout(callback, delay);\n}\n\nexport { afterNextRenderTimeout as a, afterNextRender as b };\n","const page = \"Page\";\nconst totalPages = \" of {totalPages, number}\";\nconst firstPage = \"First page\";\nconst previousPage = \"Previous page\";\nconst nextPage = \"Next page\";\nconst lastPage = \"Last page\";\nconst pageInputLabel = \"Page {currentPage, number} of {totalPages, number}\";\nconst goToPage = \"Go to page\";\nconst pageNumber = \"Page {pageNumber}\";\nconst pageSelected = \"Page {pageSelected} selected\";\nconst translationResources = {\n\tpage: page,\n\ttotalPages: totalPages,\n\tfirstPage: firstPage,\n\tpreviousPage: previousPage,\n\tnextPage: nextPage,\n\tlastPage: lastPage,\n\tpageInputLabel: pageInputLabel,\n\tgoToPage: goToPage,\n\tpageNumber: pageNumber,\n\tpageSelected: pageSelected\n};\n\nexport { translationResources as t };\n","import { r as registerInstance, c as createEvent, h, g as getElement } from './index-816e34d8.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport { t as translationResources } from './en-107673f2.js';\nimport { b as afterNextRender } from './after-next-render-ed0f7dcd.js';\nimport './get-closest-element-1597503c.js';\n\nclass GuxPaginationButtonsService {\n  static displayAllPageButtons(currentPage, totalPages, layout) {\n    switch (layout) {\n      case 'advanced':\n        return getAdvancedList(currentPage, totalPages);\n      case 'simple':\n        return getSimpleList(currentPage, totalPages);\n    }\n  }\n}\nfunction getAdvancedList(currentPage, totalPages) {\n  if (totalPages <= 7) {\n    return [...Array(totalPages).keys()].map(index => {\n      const pageNumber = index + 1;\n      return {\n        pageNumber,\n        display: String(pageNumber),\n        current: pageNumber === currentPage\n      };\n    });\n  }\n  if (currentPage <= 3) {\n    const startPageList = [...Array(5).keys()].map(index => {\n      const pageNumber = index + 1;\n      return {\n        pageNumber,\n        display: String(pageNumber),\n        current: pageNumber === currentPage\n      };\n    });\n    return [\n      ...startPageList,\n      {\n        pageNumber: 6,\n        display: '...',\n        current: false\n      },\n      {\n        pageNumber: totalPages,\n        display: String(totalPages),\n        current: false\n      }\n    ];\n  }\n  if (currentPage > totalPages - 3) {\n    const endPageList = [...Array(5).keys()].map(index => {\n      const pageNumber = index + totalPages - 4;\n      return {\n        pageNumber,\n        display: String(pageNumber),\n        current: pageNumber === currentPage\n      };\n    });\n    return [\n      {\n        pageNumber: 1,\n        display: '1',\n        current: false\n      },\n      {\n        pageNumber: totalPages - 6,\n        display: '...',\n        current: false\n      },\n      ...endPageList\n    ];\n  }\n  const middlePageList = [...Array(3).keys()].map(index => {\n    const pageNumber = index + currentPage - 1;\n    return {\n      pageNumber,\n      display: String(pageNumber),\n      current: pageNumber === currentPage\n    };\n  });\n  return [\n    {\n      pageNumber: 1,\n      display: '1',\n      current: false\n    },\n    {\n      pageNumber: currentPage - 3,\n      display: '...',\n      current: false\n    },\n    ...middlePageList,\n    {\n      pageNumber: currentPage + 3,\n      display: '...',\n      current: false\n    },\n    {\n      pageNumber: totalPages,\n      display: String(totalPages),\n      current: false\n    }\n  ];\n}\nfunction getSimpleList(currentPage, totalPages) {\n  if (totalPages <= 3) {\n    return [...Array(totalPages).keys()].map(index => {\n      const pageNumber = index + 1;\n      return {\n        pageNumber,\n        display: String(pageNumber),\n        current: pageNumber === currentPage\n      };\n    });\n  }\n  if (totalPages >= 4) {\n    const startPageList = [...Array(1).keys()].map(index => {\n      const pageNumber = index + currentPage;\n      return {\n        pageNumber,\n        display: String(pageNumber),\n        current: pageNumber !== totalPages\n      };\n    });\n    return [\n      ...startPageList,\n      {\n        pageNumber: currentPage,\n        display: '...',\n        current: false\n      },\n      {\n        pageNumber: totalPages,\n        display: String(totalPages),\n        current: totalPages == currentPage\n      }\n    ];\n  }\n}\n\nconst guxPaginationButtonsBetaCss = \"gux-pagination-buttons-beta{color:#2e394c}gux-pagination-buttons-beta .gux-pagination-buttons-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:flex-end}gux-pagination-buttons-beta .gux-pagination-buttons-container>div{flex:0 1 auto;align-self:auto;order:0}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-group{white-space:nowrap}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-group gux-button-slot-beta:not(:first-of-type){margin-right:8px;margin-left:8px}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-input-container{display:flex;flex-direction:row;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:center;margin:0 16px}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-input-container>div{flex:0 1 auto;align-self:auto;order:0;white-space:nowrap}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-input-container .gux-pagination-buttons-input{width:60px;margin:0 8px}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-input-container .gux-pagination-buttons-input input{width:inherit;text-align:center}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container{display:flex;flex-direction:row;flex-shrink:0;flex-wrap:nowrap;align-content:stretch;align-items:center;justify-content:center}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-current,gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-target{min-width:28px;min-height:24px;padding:2px 4px;margin:0;background:inherit;border:none}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-current:focus-visible,gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-target:focus-visible{border:3px solid #aac9ff;border-radius:4px;outline:none}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-current{background-color:#eff1f5;border-radius:4px;font-size:12px;line-height:20px;font-family:Roboto, sans-serif;font-weight:400;font-weight:700}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-target{font-family:Roboto, sans-serif;font-weight:400;font-size:12px;line-height:20px;color:#6b7585;cursor:pointer}gux-pagination-buttons-beta .gux-pagination-buttons-container .gux-pagination-buttons-list-container .gux-pagination-buttons-list-target:hover{background-color:#d7dce5;border-radius:4px;font-size:12px;line-height:20px;font-family:Roboto, sans-serif;font-weight:400;font-weight:700}\";\n\nconst GuxPaginationButtonsBeta = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.internalcurrentpagechange = createEvent(this, \"internalcurrentpagechange\", 3);\n    this.currentPage = undefined;\n    this.totalPages = undefined;\n    this.layout = 'advanced';\n  }\n  goToPageHandler(event) {\n    this.currentPage = event.detail;\n    this.handlePageChange(this.currentPage);\n    afterNextRender(() => {\n      this.currentElement.focus();\n    });\n  }\n  get onFirstPage() {\n    return this.currentPage <= 1;\n  }\n  get onLastPage() {\n    return this.currentPage >= this.totalPages;\n  }\n  handleClickFirst() {\n    this.internalcurrentpagechange.emit(1);\n  }\n  handleClickPrevious() {\n    this.internalcurrentpagechange.emit(this.currentPage - 1);\n  }\n  handleClickNext() {\n    this.internalcurrentpagechange.emit(this.currentPage + 1);\n  }\n  handleClickLast() {\n    this.internalcurrentpagechange.emit(this.totalPages);\n  }\n  handlePageChange(pageNumber) {\n    this.internalcurrentpagechange.emit(pageNumber);\n  }\n  getPageListEnteries(currentPage, totalPages, layout) {\n    return GuxPaginationButtonsService.displayAllPageButtons(currentPage, totalPages, layout).reduce((acc, cv) => {\n      if (cv.current) {\n        return acc.concat((h(\"button\", { ref: el => (this.currentElement = el), class: \"gux-pagination-buttons-list-current\", \"aria-label\": this.i18n('pageSelected', {\n            pageSelected: cv.pageNumber\n          }) }, cv.display)));\n      }\n      if (cv.display == '...') {\n        return acc.concat((h(\"gux-pagination-ellipsis-button\", { totalPages: this.totalPages })));\n      }\n      return acc.concat((h(\"button\", { class: \"gux-pagination-buttons-list-target\", onClick: () => this.handlePageChange(cv.pageNumber), \"aria-label\": this.i18n('pageNumber', {\n          pageNumber: cv.pageNumber\n        }) }, cv.display)));\n    }, []);\n  }\n  getPageNavigation() {\n    return (h(\"div\", { class: \"gux-pagination-buttons-list-container\" }, this.getPageListEnteries(this.currentPage, this.totalPages, this.layout)));\n  }\n  async componentWillLoad() {\n    this.i18n = await buildI18nForComponent(this.root, translationResources);\n  }\n  render() {\n    return (h(\"div\", { class: `gux-pagination-buttons-container gux-${this.layout}` }, h(\"div\", { class: \"gux-pagination-buttons-group\" }, h(\"gux-button-slot-beta\", { accent: \"ghost\" }, h(\"button\", { title: this.i18n('firstPage'), disabled: this.onFirstPage, onClick: this.handleClickFirst.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-double-left\" }))), h(\"gux-button-slot-beta\", { accent: \"ghost\" }, h(\"button\", { title: this.i18n('previousPage'), disabled: this.onFirstPage, onClick: this.handleClickPrevious.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-small-left\" })))), this.getPageNavigation(), h(\"div\", { class: \"gux-pagination-buttons-group\" }, h(\"gux-button-slot-beta\", { accent: \"ghost\" }, h(\"button\", { title: this.i18n('nextPage'), disabled: this.onLastPage, onClick: this.handleClickNext.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-small-right\" }))), h(\"gux-button-slot-beta\", { accent: \"ghost\" }, h(\"button\", { title: this.i18n('lastPage'), disabled: this.onLastPage, onClick: this.handleClickLast.bind(this) }, h(\"gux-icon\", { decorative: true, \"icon-name\": \"chevron-double-right\" }))))));\n  }\n  get root() { return getElement(this); }\n};\nGuxPaginationButtonsBeta.style = guxPaginationButtonsBetaCss;\n\nconst itemCountDisplay = \"{firstItem, number} - {lastItem, number}\";\nconst totalItems = \" of {totalItems, number}\";\nconst paginationResources = {\n\titemCountDisplay: itemCountDisplay,\n\ttotalItems: totalItems\n};\n\nconst guxPaginationItemCountsBetaCss = \"gux-pagination-item-counts-beta{color:#2e394c}gux-pagination-item-counts-beta .gux-pagination-item-counts-container{margin-right:16px;white-space:nowrap}gux-pagination-item-counts-beta .gux-pagination-item-counts-container .gux-pagination-item-counts-range{font-weight:bold}\";\n\nconst GuxPaginationItemCountsBeta = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.totalItems = 0;\n    this.currentPage = 0;\n    this.itemsPerPage = 25;\n  }\n  get firstItem() {\n    if (this.totalItems < 1) {\n      return 0;\n    }\n    return (this.currentPage - 1) * this.itemsPerPage + 1;\n  }\n  get lastItem() {\n    if (this.totalItems < 1) {\n      return 0;\n    }\n    return Math.min(this.currentPage * this.itemsPerPage, this.totalItems);\n  }\n  async componentWillLoad() {\n    this.i18n = await buildI18nForComponent(this.root, paginationResources);\n  }\n  getPaginationItemCountsRange() {\n    if (this.totalItems) {\n      return (h(\"span\", null, this.i18n('totalItems', { totalItems: this.totalItems })));\n    }\n  }\n  render() {\n    return (h(\"div\", { class: \"gux-pagination-item-counts-container\" }, h(\"span\", { class: \"gux-pagination-item-counts-range\" }, this.i18n('itemCountDisplay', {\n      firstItem: this.firstItem,\n      lastItem: this.lastItem\n    })), this.getPaginationItemCountsRange()));\n  }\n  get root() { return getElement(this); }\n};\nGuxPaginationItemCountsBeta.style = guxPaginationItemCountsBetaCss;\n\nexport { GuxPaginationButtonsBeta as gux_pagination_buttons_beta, GuxPaginationItemCountsBeta as gux_pagination_item_counts_beta };\n"],"names":["afterNextRender","callback","requestAnimationFrame","afterNextRenderTimeout","setTimeout","arguments","length","undefined","translationResources","page","totalPages","firstPage","previousPage","nextPage","lastPage","pageInputLabel","goToPage","pageNumber","pageSelected","GuxPaginationButtonsService","displayAllPageButtons","currentPage","layout","Array","keys","map","index","display","String","current","endPageList","middlePageList","getAdvancedList","getSimpleList","GuxPaginationButtonsBeta","constructor","hostRef","registerInstance","this","internalcurrentpagechange","createEvent","goToPageHandler","event","detail","handlePageChange","currentElement","focus","onFirstPage","onLastPage","handleClickFirst","emit","handleClickPrevious","handleClickNext","handleClickLast","getPageListEnteries","reduce","acc","cv","concat","h","ref","el","class","i18n","onClick","getPageNavigation","componentWillLoad","buildI18nForComponent","root","render","accent","title","disabled","bind","decorative","getElement","style","paginationResources","itemCountDisplay","totalItems","GuxPaginationItemCountsBeta","itemsPerPage","firstItem","lastItem","Math","min","getPaginationItemCountsRange"],"sourceRoot":""}