{"version":3,"file":"static/js/2965.4fbe4c59.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/gux-time-zone-picker-beta.entry.js","../node_modules/genesys-spark-components/dist/esm/simulate-native-event-ac69961f.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-816e34d8.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport { f as formatOffset, g as getTimeZoneList, t as translationResources } from './time-zone-cf732816.js';\nimport { t as trackComponent } from './usage-2c6b0896.js';\nimport { s as simulateNativeEvent } from './simulate-native-event-ac69961f.js';\nimport './get-closest-element-1597503c.js';\n\nconst guxTimeZonePickerCss = \".has-defaults gux-option{padding-left:20px}gux-dropdown .zone-header{padding:6px 12px;color:#6b7585;text-transform:uppercase}gux-dropdown .tz-utc{color:#596373}gux-dropdown gux-option.gux-active .tz-utc,gux-dropdown gux-option.gux-hovered:not(:disabled) .tz-utc{color:#e2e6ee}\";\n\nconst GuxTimeZonePickerBeta = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.value = undefined;\n    this.workspaceDefault = undefined;\n    this.localDefault = undefined;\n    this.searchString = '';\n    this.timeZoneOptionElements = undefined;\n    this.timeZoneList = undefined;\n    this.filteredZoneList = undefined;\n  }\n  on(event) {\n    this.searchString = event.detail;\n    this.filteredZoneList = this.filterTimeZoneList(this.timeZoneList);\n    this.timeZoneOptionElements = this.renderTimeZones(this.filteredZoneList);\n  }\n  async componentWillLoad() {\n    trackComponent(this.root);\n    this.i18n = await buildI18nForComponent(this.root, translationResources);\n    this.timeZoneList = this.getTimeZoneOptionsList();\n    this.filteredZoneList = this.timeZoneList;\n    this.timeZoneOptionElements = this.renderTimeZones(this.filteredZoneList);\n  }\n  componentDidLoad() {\n    var _a;\n    const dropdownElement = (_a = this.root) === null || _a === void 0 ? void 0 : _a.shadowRoot.querySelector('gux-dropdown');\n    dropdownElement.addEventListener('change', (event) => {\n      const selectedElement = event.target;\n      const selectedValue = selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.value;\n      this.value = selectedValue;\n      simulateNativeEvent(this.root, 'change');\n    });\n  }\n  filterTimeZoneList(timeZoneList) {\n    const searchString = this.searchString;\n    return timeZoneList.filter(tzOption => {\n      return tzOption.displayTextName\n        .toLowerCase()\n        .includes(searchString.toLowerCase());\n    });\n  }\n  getTimeZoneOption(timeZone) {\n    const localizedName = this.i18n(timeZone.name);\n    if (!localizedName) {\n      return;\n    }\n    const formattedOffset = formatOffset(timeZone.currentTimeOffsetInMinutes);\n    const localizedUTC = this.i18n('UTC');\n    const displayTextName = `${localizedName}`;\n    const displayTextOffset = ` (${localizedUTC}${formattedOffset})`;\n    const baseDisplayOffsetText = `${displayTextOffset}`;\n    return {\n      value: timeZone.name,\n      localizedName,\n      formattedOffset,\n      displayTextName,\n      displayTextOffset,\n      baseDisplayOffsetText\n    };\n  }\n  getTimeZoneOptionsList() {\n    const allTimeZones = getTimeZoneList();\n    const timeZoneOptionsList = [];\n    allTimeZones.forEach(timeZone => {\n      const zone = this.getTimeZoneOption(timeZone);\n      //Filter out zones we don't have a translation for; helps filter out deprecated module zones we don't want to use.\n      if (!zone) {\n        return;\n      }\n      timeZoneOptionsList.push(zone);\n    });\n    return timeZoneOptionsList.sort((a, b) => {\n      var _a;\n      return ((_a = a.displayTextName) === null || _a === void 0 ? void 0 : _a.localeCompare(b.displayTextName)) || 0;\n    });\n  }\n  getDefaultZones() {\n    const defaultZones = [];\n    if (this.workspaceDefault) {\n      defaultZones.push(this.workspaceDefault);\n    }\n    if (this.localDefault) {\n      defaultZones.push(this.localDefault);\n    }\n    return defaultZones;\n  }\n  getDefaultZoneList() {\n    const defaultZones = this.getDefaultZones();\n    const defaultZoneOptions = this.timeZoneList.reduce((defaults, tz) => {\n      if (defaultZones.includes(tz.value)) {\n        return defaults.concat([Object.assign({}, tz)]);\n      }\n      return defaults;\n    }, []);\n    defaultZoneOptions.forEach(option => {\n      const baseDisplayOffsetText = option.baseDisplayOffsetText;\n      if (defaultZoneOptions.length === 1 &&\n        this.workspaceDefault === this.localDefault) {\n        defaultZoneOptions[0].displayTextOffset = `${defaultZoneOptions[0].displayTextOffset} ${this.i18n('localAndWorkspaceDefault')}`;\n      }\n      else if (option.value === this.workspaceDefault) {\n        option.displayTextOffset = `${baseDisplayOffsetText} ${this.i18n('workspaceDefault')}`;\n      }\n      else if (option.value === this.localDefault) {\n        option.displayTextOffset = `${baseDisplayOffsetText} ${this.i18n('localDefault')}`;\n      }\n    });\n    return defaultZoneOptions;\n  }\n  renderTimeZones(zoneList) {\n    return zoneList.map(tzOption => {\n      return (h(\"gux-option\", { value: tzOption.value }, tzOption.displayTextName, h(\"span\", { class: \"tz-utc\" }, tzOption.displayTextOffset)));\n    });\n  }\n  renderDefaultsList() {\n    const defaults = this.renderTimeZones(this.getDefaultZoneList());\n    if (defaults.length) {\n      return defaults;\n    }\n  }\n  render() {\n    return (h(\"gux-dropdown\", { class: {\n        'has-defaults': !!this.workspaceDefault || !!this.localDefault\n      }, \"filter-type\": \"custom\", placeholder: this.i18n('selectZone'), value: this.value }, h(\"gux-listbox\", { \"aria-label\": this.i18n('timeZones') }, h(\"div\", { class: \"zone-header\" }, this.i18n('default')), this.renderDefaultsList(), h(\"gux-list-divider\", null), h(\"div\", { class: \"zone-header\" }, this.i18n('all')), this.timeZoneOptionElements)));\n  }\n  get root() { return getElement(this); }\n};\nGuxTimeZonePickerBeta.style = guxTimeZonePickerCss;\n\nexport { GuxTimeZonePickerBeta as gux_time_zone_picker_beta };\n","function simulateNativeEvent(targetElement, nativeEventName) {\n  switch (nativeEventName) {\n    case 'change':\n      return targetElement.dispatchEvent(new InputEvent('change', {\n        bubbles: true\n      }));\n    case 'input':\n      return targetElement.dispatchEvent(new InputEvent('input', {\n        bubbles: true\n      }));\n  }\n}\n\nexport { simulateNativeEvent as s };\n"],"names":["GuxTimeZonePickerBeta","constructor","hostRef","registerInstance","this","value","undefined","workspaceDefault","localDefault","searchString","timeZoneOptionElements","timeZoneList","filteredZoneList","on","event","detail","filterTimeZoneList","renderTimeZones","componentWillLoad","trackComponent","root","i18n","buildI18nForComponent","translationResources","getTimeZoneOptionsList","componentDidLoad","_a","shadowRoot","querySelector","addEventListener","selectedElement","target","selectedValue","simulateNativeEvent","filter","tzOption","displayTextName","toLowerCase","includes","getTimeZoneOption","timeZone","localizedName","name","formattedOffset","formatOffset","currentTimeOffsetInMinutes","localizedUTC","concat","displayTextOffset","baseDisplayOffsetText","allTimeZones","getTimeZoneList","timeZoneOptionsList","forEach","zone","push","sort","a","b","localeCompare","getDefaultZones","defaultZones","getDefaultZoneList","defaultZoneOptions","reduce","defaults","tz","Object","assign","option","length","zoneList","map","h","class","renderDefaultsList","render","placeholder","getElement","style","targetElement","nativeEventName","dispatchEvent","InputEvent","bubbles"],"sourceRoot":""}