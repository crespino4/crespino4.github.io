{"version":3,"file":"static/js/3422.78c9c98a.chunk.js","mappings":"sLAGA,MAEMA,EAAgB,MACpBC,WAAAA,CAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,EACzB,CAKA,cAAMG,GACJD,KAAKE,cAAcC,OACrB,CACAC,SAAAA,CAAUC,GAER,QADAC,EAAAA,EAAAA,GAAeD,EAAOL,KAAKO,MACnBF,EAAMG,KACZ,IAAK,aACL,IAAK,QACHH,EAAMI,kBAGZ,CACAC,MAAAA,GACE,OAAQC,EAAAA,EAAAA,GAAE,SAAU,CAAEC,KAAM,SAAUC,MAAO,yBAA0BC,KAAM,WAAY,gBAAiB,QAASC,UAAW,EAAGC,IAAKC,GAAOjB,KAAKE,cAAgBe,IAAON,EAAAA,EAAAA,GAAE,OAAQ,CAAEE,MAAO,gCAAiCF,EAAAA,EAAAA,GAAE,OAAQ,OACzO,CACA,QAAIJ,GAAS,OAAOW,EAAAA,EAAAA,GAAWlB,KAAO,GAExCJ,EAAcuB,MA3BW,kjB,0CCHzB,MAAMC,EAAY,IAClB,SAASd,EAAeD,EAAOgB,GAC7B,OAAQhB,EAAMG,KACZ,IAAK,UACHH,EAAMI,kBACNJ,EAAMiB,iBAsCZ,SAAkCD,GAChC,MAAME,EAA2BF,EAAeG,uBAC5CD,EACGA,EAAyBtB,WAG9BwB,EAAiBJ,EAErB,CA7CMK,CAAyBL,GACzB,MACF,IAAK,YACHhB,EAAMI,kBACNJ,EAAMiB,iBA0CZ,SAA8BD,GAC5B,MAAMM,EAAuBN,EAAeO,mBACxCD,EACGA,EAAqB1B,WAG1B4B,EAAkBR,EAEtB,CAjDMS,CAAqBT,GACrB,MACF,IAAK,aAGL,IAAK,YACHhB,EAAMiB,iBACN,MACF,IAAK,OACHjB,EAAMI,kBACNJ,EAAMiB,iBACNO,EAAkBR,GAClB,MACF,IAAK,MACHhB,EAAMI,kBACNJ,EAAMiB,iBACNG,EAAiBJ,GAGvB,CACA,SAASQ,EAAkBR,GACzB,MAAMU,EA6BR,SAAkCV,GAChC,IAAIU,EAAwBV,EAC5B,KAAwD,OAAjDU,EAAsBP,wBAC3BO,EAAwBA,EAAsBP,uBAEhD,OAAOO,CACT,CAnCgCC,CAAyBX,GACnDU,GACGA,EAAsB9B,UAE/B,CACA,SAASwB,EAAiBJ,GACxB,MAAMY,EA8BR,SAAiCZ,GAC/B,IAAIY,EAAuBZ,EAC3B,KAAmD,OAA5CY,EAAqBL,oBAC1BK,EAAuBA,EAAqBL,mBAE9C,OAAOK,CACT,CApC+BC,CAAwBb,GACjDY,GACGA,EAAqBhC,UAE9B,C","sources":["../node_modules/genesys-spark-components/dist/esm/gux-menu-option.entry.js","../node_modules/genesys-spark-components/dist/esm/gux-menu.common-4a871a5c.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-816e34d8.js';\nimport { m as menuNavigation } from './gux-menu.common-4a871a5c.js';\n\nconst guxMenuOptionCss = \"gux-menu-option{display:block;flex:1 1 auto;align-self:auto}gux-menu-option .gux-menu-option-button{all:unset;width:100%;width:125px;height:32px;padding:0 16px;line-height:32px;color:#2e394c;background-color:#fdfdfd}gux-menu-option .gux-menu-option-button:focus-within,gux-menu-option .gux-menu-option-button:hover{color:#fdfdfd;background-color:#2a60c8}gux-menu-option .gux-menu-option-button:enabled{cursor:pointer}gux-menu-option .gux-menu-option-button .gux-menu-option-button-text{display:block;overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap}\";\n\nconst GuxMenuOption = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Focus on the components button element\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async guxFocus() {\n    this.buttonElement.focus();\n  }\n  onKeydown(event) {\n    menuNavigation(event, this.root);\n    switch (event.key) {\n      case 'ArrowRight':\n      case 'Enter':\n        event.stopPropagation();\n        break;\n    }\n  }\n  render() {\n    return (h(\"button\", { type: \"button\", class: \"gux-menu-option-button\", role: \"menuitem\", \"aria-haspopup\": \"false\", tabIndex: -1, ref: el => (this.buttonElement = el) }, h(\"span\", { class: \"gux-menu-option-button-text\" }, h(\"slot\", null))));\n  }\n  get root() { return getElement(this); }\n};\nGuxMenuOption.style = guxMenuOptionCss;\n\nexport { GuxMenuOption as gux_menu_option };\n","const hideDelay = 250;\nfunction menuNavigation(event, currentElement) {\n  switch (event.key) {\n    case 'ArrowUp':\n      event.stopPropagation();\n      event.preventDefault();\n      focusPreviousSiblingLoop(currentElement);\n      break;\n    case 'ArrowDown':\n      event.stopPropagation();\n      event.preventDefault();\n      focusNextSiblingLoop(currentElement);\n      break;\n    case 'ArrowRight':\n      event.preventDefault();\n      break;\n    case 'ArrowLeft':\n      event.preventDefault();\n      break;\n    case 'Home':\n      event.stopPropagation();\n      event.preventDefault();\n      focusFirstSibling(currentElement);\n      break;\n    case 'End':\n      event.stopPropagation();\n      event.preventDefault();\n      focusLastSibling(currentElement);\n      break;\n  }\n}\nfunction focusFirstSibling(currentElement) {\n  const firstFocusableElement = getFirstFocusableElement(currentElement);\n  if (firstFocusableElement) {\n    void firstFocusableElement.guxFocus();\n  }\n}\nfunction focusLastSibling(currentElement) {\n  const lastFocusableElement = getLastFocusableElement(currentElement);\n  if (lastFocusableElement) {\n    void lastFocusableElement.guxFocus();\n  }\n}\nfunction focusPreviousSiblingLoop(currentElement) {\n  const previousFocusableElement = currentElement.previousElementSibling;\n  if (previousFocusableElement) {\n    void previousFocusableElement.guxFocus();\n  }\n  else {\n    focusLastSibling(currentElement);\n  }\n}\nfunction focusNextSiblingLoop(currentElement) {\n  const nextFocusableElement = currentElement.nextElementSibling;\n  if (nextFocusableElement) {\n    void nextFocusableElement.guxFocus();\n  }\n  else {\n    focusFirstSibling(currentElement);\n  }\n}\nfunction getFirstFocusableElement(currentElement) {\n  let firstFocusableElement = currentElement;\n  while (firstFocusableElement.previousElementSibling !== null) {\n    firstFocusableElement = firstFocusableElement.previousElementSibling;\n  }\n  return firstFocusableElement;\n}\nfunction getLastFocusableElement(currentElement) {\n  let lastFocusableElement = currentElement;\n  while (lastFocusableElement.nextElementSibling !== null) {\n    lastFocusableElement = lastFocusableElement.nextElementSibling;\n  }\n  return lastFocusableElement;\n}\n\nexport { hideDelay as h, menuNavigation as m };\n"],"names":["GuxMenuOption","constructor","hostRef","registerInstance","this","guxFocus","buttonElement","focus","onKeydown","event","menuNavigation","root","key","stopPropagation","render","h","type","class","role","tabIndex","ref","el","getElement","style","hideDelay","currentElement","preventDefault","previousFocusableElement","previousElementSibling","focusLastSibling","focusPreviousSiblingLoop","nextFocusableElement","nextElementSibling","focusFirstSibling","focusNextSiblingLoop","firstFocusableElement","getFirstFocusableElement","lastFocusableElement","getLastFocusableElement"],"sourceRoot":""}