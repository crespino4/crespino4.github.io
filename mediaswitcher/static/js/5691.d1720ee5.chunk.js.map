{"version":3,"file":"static/js/5691.d1720ee5.chunk.js","mappings":"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","sources":["../node_modules/genesys-spark-components/dist/esm/after-next-render-ed0f7dcd.js","../node_modules/genesys-spark-components/dist/esm/gux-tab-list.entry.js","../node_modules/genesys-spark-components/dist/esm/on-mutation-9b53a0da.js"],"sourcesContent":["function afterNextRender(callback) {\n  requestAnimationFrame(() => requestAnimationFrame(callback));\n}\nfunction afterNextRenderTimeout(callback, delay = 100) {\n  return setTimeout(callback, delay);\n}\n\nexport { afterNextRenderTimeout as a, afterNextRender as b };\n","import { r as registerInstance, d as readTask, w as writeTask, h, g as getElement } from './index-816e34d8.js';\nimport { a as afterNextRenderTimeout } from './after-next-render-ed0f7dcd.js';\nimport { b as buildI18nForComponent } from './index-992b023e.js';\nimport { O as OnMutation } from './on-mutation-9b53a0da.js';\nimport './get-closest-element-1597503c.js';\n\nconst scrollLeft = \"Scroll Left\";\nconst scrollRight = \"Scroll Right\";\nconst scrollUp = \"Scroll Up\";\nconst scrollDown = \"Scroll Down\";\nconst tabsResources = {\n\tscrollLeft: scrollLeft,\n\tscrollRight: scrollRight,\n\tscrollUp: scrollUp,\n\tscrollDown: scrollDown\n};\n\nconst guxTabListCss = \"gux-tabs[orientation='vertical']{height:100%}gux-tabs[orientation='vertical']>gux-tab-list .gux-tab-container{display:flex;flex-direction:column;width:160px;max-width:160px;height:100%;margin-right:16px;border-right:1px solid #d7dce5}gux-tabs[orientation='vertical']>gux-tab-list .gux-tab-container .gux-scroll-button-container{width:100%}gux-tabs[orientation='vertical']>gux-tab-list .gux-tab-container .gux-scroll-button-container button{width:100%}gux-tabs[orientation='vertical']>gux-tab-list .gux-tab-container .gux-scrollable-section{flex-direction:column;height:100%;overflow-y:auto;scrollbar-width:none;-ms-overflow-style:none;scroll-behavior:smooth}gux-tabs[orientation='vertical']>gux-tab-list .gux-tab-container .gux-scrollable-section::-webkit-scrollbar{width:0;height:0}gux-tabs:not([orientation='vertical'])>gux-tab-list .gux-tab-container{height:40px;margin-bottom:16px;border-bottom:1px solid #d7dce5}gux-tabs:not([orientation='vertical'])>gux-tab-list .gux-scrollable-section{overflow-x:auto}gux-tabs .gux-tab-container{box-sizing:content-box;display:flex;width:100%;overflow-x:hidden;overflow-y:hidden;background-color:#fff}gux-tabs .gux-scrollable-section{display:flex;flex:1 1 auto;scroll-behavior:smooth;scrollbar-width:none}gux-tabs .gux-scrollable-section::-webkit-scrollbar{height:0}gux-tabs .gux-scroll-button-container{display:flex;border-radius:4px}gux-tabs .gux-scroll-button-container .gux-scroll-button{display:flex;align-items:center;justify-content:center;width:28px;height:40px;color:#202937;cursor:pointer;background-color:#c8cfda;background-color:#e2e6ee;border:none;border-radius:4px}gux-tabs .gux-scroll-button-container .gux-scroll-button gux-icon{width:16px;height:16px}gux-tabs .gux-scroll-button-container .gux-scroll-button:hover:not(:disabled){background-color:#d7dce5}gux-tabs .gux-scroll-button-container .gux-scroll-button:active:not(:disabled){background-color:#d2d8e5}gux-tabs .gux-scroll-button-container .gux-scroll-button:disabled{cursor:default;opacity:0.5}\";\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n    r = Reflect.decorate(decorators, target, key, desc);\n  else\n    for (var i = decorators.length - 1; i >= 0; i--)\n      if (d = decorators[i])\n        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst GuxTabList = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.currentScrollIndex = 0;\n    this.focused = 0;\n    this.tabTriggers = undefined;\n    this.hasHorizontalScrollbar = false;\n    this.hasVerticalScrollbar = false;\n    this.isScrolledToBeginning = false;\n    this.isScrolledToEnd = false;\n  }\n  onFocusout(event) {\n    if (!this.root.contains(event.relatedTarget)) {\n      this.tabTriggers.forEach((tabTrigger, index) => {\n        void tabTrigger.guxGetActive().then(activeElement => {\n          if (activeElement) {\n            this.focused = index;\n          }\n          else {\n            tabTrigger.querySelector('button').setAttribute('tabindex', '-1');\n          }\n        });\n      });\n    }\n  }\n  onHasVerticalScrollBar() {\n    this.checkDisabledScrollButtons();\n  }\n  onScroll() {\n    this.checkDisabledScrollButtons();\n  }\n  onKeydown(event) {\n    switch (event.key) {\n      case 'ArrowRight':\n      case 'ArrowDown':\n        event.preventDefault();\n        this.handleKeyboardScroll('forward');\n        break;\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        event.preventDefault();\n        this.handleKeyboardScroll('backward');\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this.focusTab(this.focused);\n        break;\n      case 'Home':\n        event.preventDefault();\n        this.focusTab(0);\n        break;\n      case 'End':\n        event.preventDefault();\n        this.focusTab(this.tabTriggers.length - 1);\n        break;\n    }\n  }\n  onMutation() {\n    this.setTabTriggers();\n  }\n  // eslint-disable-next-line @typescript-eslint/require-await\n  async guxSetActive(activeTab) {\n    this.tabTriggers.forEach((tabTrigger, index) => {\n      const active = tabTrigger.tabId === activeTab;\n      void tabTrigger.guxSetActive(active);\n      if (active) {\n        this.focused = index;\n      }\n    });\n  }\n  focusTab(tabIndex) {\n    this.focused = tabIndex;\n    this.tabTriggers.forEach((tabTrigger, index) => {\n      void tabTrigger.guxGetActive().then(activeElement => {\n        if (this.focused !== index && !activeElement) {\n          tabTrigger.querySelector('button').setAttribute('tabindex', '-1');\n        }\n      });\n    });\n    this.tabTriggers[this.focused]\n      .querySelector('button')\n      .setAttribute('tabindex', '0');\n    void this.tabTriggers[this.focused].guxFocus();\n  }\n  setTabTriggers() {\n    this.tabTriggers = this.root.querySelectorAll('gux-tab');\n    if (this.tabTriggers) {\n      this.triggerIds = Array.from(this.tabTriggers)\n        .map(trigger => `gux-${trigger.getAttribute('tab-id')}-tab`)\n        .join(' ');\n    }\n    else {\n      this.triggerIds = '';\n    }\n  }\n  checkForScrollbarHideOrShow() {\n    readTask(() => {\n      const el = this.root.querySelector('.gux-scrollable-section');\n      const hasHorizontalScrollbar = el.clientWidth < el.scrollWidth;\n      const hasVerticalScrollbar = el.clientHeight < el.scrollHeight;\n      if (hasHorizontalScrollbar !== this.hasHorizontalScrollbar) {\n        this.hasHorizontalScrollbar = hasHorizontalScrollbar;\n      }\n      if (hasVerticalScrollbar !== this.hasVerticalScrollbar) {\n        this.hasVerticalScrollbar = hasVerticalScrollbar;\n      }\n      this.checkDisabledScrollButtons();\n    });\n  }\n  handleKeyboardScroll(direction) {\n    const scrollableSection = this.root.querySelector('.gux-scrollable-section');\n    if (direction === 'forward') {\n      if (this.focused < this.tabTriggers.length - 1) {\n        writeTask(() => {\n          this.hasHorizontalScrollbar ? this.scrollRight() : this.scrollDown();\n        });\n        this.focusTab(this.focused + 1);\n      }\n      else {\n        writeTask(() => {\n          this.hasHorizontalScrollbar\n            ? scrollableSection.scrollBy(-scrollableSection.scrollWidth, 0)\n            : scrollableSection.scrollBy(0, -scrollableSection.scrollHeight);\n        });\n        this.focusTab(0);\n      }\n    }\n    else if (direction === 'backward') {\n      if (this.focused > 0) {\n        writeTask(() => {\n          this.hasHorizontalScrollbar ? this.scrollLeft() : this.scrollUp();\n        });\n        this.focusTab(this.focused - 1);\n      }\n      else {\n        writeTask(() => {\n          this.hasHorizontalScrollbar\n            ? scrollableSection.scrollBy(scrollableSection.scrollWidth, 0)\n            : scrollableSection.scrollBy(0, scrollableSection.scrollHeight);\n        });\n        this.focusTab(this.tabTriggers.length - 1);\n      }\n    }\n  }\n  disconnectedCallback() {\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.root.querySelector('.gux-tab-container'));\n    }\n    if (this.domObserver) {\n      this.domObserver.disconnect();\n    }\n  }\n  async componentWillLoad() {\n    this.setTabTriggers();\n    this.i18n = await buildI18nForComponent(this.root, tabsResources, 'gux-tabs');\n  }\n  componentDidLoad() {\n    if (!this.resizeObserver && window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => this.checkForScrollbarHideOrShow());\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(this.root.querySelector('.gux-scrollable-section'));\n    }\n    if (!this.domObserver && window.MutationObserver) {\n      this.domObserver = new MutationObserver(() => this.checkForScrollbarHideOrShow());\n    }\n    if (this.domObserver) {\n      this.domObserver.observe(this.root, {\n        childList: true,\n        attributes: false,\n        subtree: true\n      });\n    }\n    afterNextRenderTimeout(() => {\n      this.checkForScrollbarHideOrShow();\n    }, 500);\n  }\n  checkDisabledScrollButtons() {\n    const scrollContainer = this.root.querySelector('.gux-scrollable-section');\n    if (this.hasHorizontalScrollbar) {\n      const scrollLeft = scrollContainer.scrollLeft;\n      const scrollLeftMax = scrollContainer.scrollWidth - scrollContainer.clientWidth;\n      this.isScrolledToBeginning = scrollLeft === 0;\n      this.isScrolledToEnd = scrollLeftMax - scrollLeft === 0;\n    }\n    else {\n      const scrollTop = scrollContainer.scrollTop;\n      const scrollTopMax = scrollContainer.scrollHeight - scrollContainer.clientHeight;\n      this.isScrolledToBeginning = scrollTop === 0;\n      this.isScrolledToEnd = scrollTopMax - scrollTop === 0;\n    }\n  }\n  getTabLength() {\n    var _a;\n    return (_a = this.tabTriggers[this.currentScrollIndex]) === null || _a === void 0 ? void 0 : _a.scrollWidth;\n  }\n  scrollLeft() {\n    writeTask(() => {\n      if (this.isScrolledToEnd) {\n        this.currentScrollIndex = this.tabTriggers.length - 1;\n      }\n      else {\n        this.currentScrollIndex = this.currentScrollIndex - 1;\n      }\n      this.root\n        .querySelector('.gux-scrollable-section')\n        .scrollBy(-this.getTabLength(), 0);\n    });\n  }\n  scrollRight() {\n    writeTask(() => {\n      if (this.isScrolledToBeginning) {\n        this.currentScrollIndex = 0;\n      }\n      this.root\n        .querySelector('.gux-scrollable-section')\n        .scrollBy(this.getTabLength(), 0);\n      this.currentScrollIndex = this.currentScrollIndex + 1;\n    });\n  }\n  scrollUp() {\n    writeTask(() => {\n      this.root\n        .querySelector('.gux-scrollable-section')\n        .scrollBy(0, -this.tabTriggers[this.focused].clientHeight);\n    });\n  }\n  scrollDown() {\n    writeTask(() => {\n      this.root\n        .querySelector('.gux-scrollable-section')\n        .scrollBy(0, this.tabTriggers[this.focused].clientHeight);\n    });\n  }\n  render() {\n    return (h(\"div\", { class: \"gux-tab-container\" }, this.hasHorizontalScrollbar\n      ? this.renderScrollButton('scrollLeft')\n      : this.renderScrollButton('scrollUp'), h(\"div\", { role: \"tablist\", class: \"gux-scrollable-section\", \"aria-owns\": this.triggerIds }, h(\"slot\", null)), this.hasHorizontalScrollbar\n      ? this.renderScrollButton('scrollRight')\n      : this.renderScrollButton('scrollDown')));\n  }\n  renderScrollButton(direction) {\n    return (h(\"div\", { class: \"gux-scroll-button-container\" }, this.hasHorizontalScrollbar || this.hasVerticalScrollbar ? (h(\"button\", { disabled: this.getButtonDisabled(direction), tabindex: \"-1\", title: this.i18n(direction), \"aria-label\": this.i18n(direction), class: \"gux-scroll-button\", onClick: () => this.getScrollDirection(direction) }, h(\"gux-icon\", { \"icon-name\": this.getChevronIconName(direction), decorative: true }))) : null));\n  }\n  getButtonDisabled(direction) {\n    switch (direction) {\n      case 'scrollLeft':\n      case 'scrollUp':\n        return this.isScrolledToBeginning;\n      case 'scrollRight':\n      case 'scrollDown':\n        return this.isScrolledToEnd;\n    }\n  }\n  getScrollDirection(direction) {\n    switch (direction) {\n      case 'scrollLeft':\n        this.scrollLeft();\n        break;\n      case 'scrollRight':\n        this.scrollRight();\n        break;\n      case 'scrollUp':\n        this.scrollUp();\n        break;\n      case 'scrollDown':\n        this.scrollDown();\n    }\n  }\n  getChevronIconName(direction) {\n    switch (direction) {\n      case 'scrollLeft':\n        return 'chevron-small-left';\n      case 'scrollRight':\n        return 'chevron-small-right';\n      case 'scrollUp':\n        return 'chevron-small-up';\n      case 'scrollDown':\n        return 'chevron-small-down';\n    }\n  }\n  get root() { return getElement(this); }\n};\n__decorate([\n  OnMutation({ childList: true, subtree: true })\n], GuxTabList.prototype, \"onMutation\", null);\nGuxTabList.style = guxTabListCss;\n\nexport { GuxTabList as gux_tab_list };\n","import { g as getElement } from './index-816e34d8.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nfunction OnMutation(options) {\n  return (proto, methodName) => {\n    const { connectedCallback, disconnectedCallback } = proto;\n    const store = new Map();\n    proto.connectedCallback = function () {\n      const method = this[methodName];\n      const observer = new MutationObserver(method.bind(this));\n      registerObserver(store, this, observer, options);\n      return connectedCallback && connectedCallback.call(this);\n    };\n    proto.disconnectedCallback = function () {\n      deregisterObserver(store, this);\n      return disconnectedCallback && disconnectedCallback.call(this);\n    };\n  };\n}\nfunction registerObserver(store, key, observer, options) {\n  if (store.has(key)) {\n    store.get(key).disconnect();\n  }\n  store.set(key, observer);\n  observer.observe(getElement(key), options);\n}\nfunction deregisterObserver(store, key) {\n  if (store.has(key)) {\n    store.get(key).disconnect();\n  }\n  store.delete(key);\n}\n\nexport { OnMutation as O };\n"],"names":["afterNextRender","callback","requestAnimationFrame","afterNextRenderTimeout","setTimeout","arguments","length","undefined","tabsResources","scrollLeft","scrollRight","scrollUp","scrollDown","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","GuxTabList","constructor","hostRef","registerInstance","this","currentScrollIndex","focused","tabTriggers","hasHorizontalScrollbar","hasVerticalScrollbar","isScrolledToBeginning","isScrolledToEnd","onFocusout","event","root","contains","relatedTarget","forEach","tabTrigger","index","guxGetActive","then","activeElement","querySelector","setAttribute","onHasVerticalScrollBar","checkDisabledScrollButtons","onScroll","onKeydown","preventDefault","handleKeyboardScroll","focusTab","onMutation","setTabTriggers","guxSetActive","activeTab","active","tabId","tabIndex","guxFocus","querySelectorAll","triggerIds","Array","from","map","trigger","concat","getAttribute","join","checkForScrollbarHideOrShow","readTask","el","clientWidth","scrollWidth","clientHeight","scrollHeight","direction","scrollableSection","writeTask","scrollBy","disconnectedCallback","resizeObserver","unobserve","domObserver","disconnect","componentWillLoad","i18n","buildI18nForComponent","componentDidLoad","window","ResizeObserver","observe","MutationObserver","childList","attributes","subtree","scrollContainer","scrollLeftMax","scrollTop","scrollTopMax","getTabLength","_a","render","h","class","renderScrollButton","role","disabled","getButtonDisabled","tabindex","title","onClick","getScrollDirection","getChevronIconName","decorative","getElement","OnMutation","prototype","style","options","proto","methodName","connectedCallback","store","Map","method","observer","bind","has","get","set","registerObserver","call","delete","deregisterObserver"],"sourceRoot":""}