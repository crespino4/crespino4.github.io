{"version":3,"file":"static/js/719.50cc6b56.chunk.js","mappings":"gNAOA,MAAMA,EAAU,MACdC,WAAAA,CAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,wBAAyB,EAC9BD,KAAKE,UAAW,IAAIC,MAAOC,cAC3BJ,KAAKK,OAAS,QACdL,KAAKM,cAAWC,CAClB,CACAC,iBAAAA,IACEC,EAAAA,EAAAA,GAAeT,KAAKU,OAChBC,EAAAA,EAAAA,KACFX,KAAKC,wBAAyB,EAG9BD,KAAKY,UAAY,IAAIC,EAAAA,GAAkBC,EAAAA,EAAAA,GAAiBd,KAAKU,MAEjE,CACAK,UAAAA,GACE,OAAIf,KAAKC,wBACAe,EAAAA,EAAAA,IAAeC,EAAAA,EAAAA,GAAuBjB,KAAKU,MAAO,CACvDQ,UAAWlB,KAAKK,OAChBC,UAAUa,EAAAA,EAAAA,GAAiBnB,KAAKM,YAE/BD,OAAO,IAAIF,KAAKH,KAAKE,WAGjBF,KAAKY,UAAUQ,WAAW,IAAIjB,KAAKH,KAAKE,UAAWF,KAAKK,OAAQ,CACrEC,UAAUa,EAAAA,EAAAA,GAAiBnB,KAAKM,WAGtC,CACAe,MAAAA,GACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,KAAMvB,KAAKe,aAC7B,CACA,QAAIL,GAAS,OAAOc,EAAAA,EAAAA,GAAWxB,KAAO,E","sources":["../node_modules/genesys-spark-components/dist/esm/gux-time-beta.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-816e34d8.js';\nimport { t as trackComponent } from './usage-2c6b0896.js';\nimport { D as DateTimeFormatter, g as getValidTimezone } from './get-valid-timezone-d7633058.js';\nimport { u as useRegionalDates, d as dateTimeFormat, a as determineDisplayLocale } from './use-regional-dates-b0022bcb.js';\nimport { g as getDesiredLocale } from './index-992b023e.js';\nimport './get-closest-element-1597503c.js';\n\nconst GuxTime = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hasRegionalDatesCookie = false;\n    this.datetime = new Date().toISOString();\n    this.format = 'short';\n    this.timeZone = undefined;\n  }\n  componentWillLoad() {\n    trackComponent(this.root);\n    if (useRegionalDates()) {\n      this.hasRegionalDatesCookie = true;\n    }\n    else {\n      this.formatter = new DateTimeFormatter(getDesiredLocale(this.root));\n    }\n  }\n  renderTime() {\n    if (this.hasRegionalDatesCookie) {\n      return dateTimeFormat(determineDisplayLocale(this.root), {\n        timeStyle: this.format,\n        timeZone: getValidTimezone(this.timeZone)\n      })\n        .format(new Date(this.datetime));\n    }\n    else {\n      return this.formatter.formatTime(new Date(this.datetime), this.format, {\n        timeZone: getValidTimezone(this.timeZone)\n      });\n    }\n  }\n  render() {\n    return (h(Host, null, this.renderTime()));\n  }\n  get root() { return getElement(this); }\n};\n\nexport { GuxTime as gux_time_beta };\n"],"names":["GuxTime","constructor","hostRef","registerInstance","this","hasRegionalDatesCookie","datetime","Date","toISOString","format","timeZone","undefined","componentWillLoad","trackComponent","root","useRegionalDates","formatter","DateTimeFormatter","getDesiredLocale","renderTime","dateTimeFormat","determineDisplayLocale","timeStyle","getValidTimezone","formatTime","render","h","Host","getElement"],"sourceRoot":""}