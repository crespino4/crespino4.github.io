"use strict";(self.webpackChunkgcx_media_switcher=self.webpackChunkgcx_media_switcher||[]).push([[8170],{8170:(t,n,i)=>{i.r(n),i.d(n,{gux_time_zone_beta:()=>c});var e=i(7442),s=i(9014),o=i(4219),r=i(7595);const c=class{constructor(t){(0,e.r)(this,t),this.timeZoneId=void 0,this.offset=void 0,this.surroundOffset=void 0,this.shorten=void 0}renderZoneDisplay(){let t=this.i18n(this.timeZoneId);this.shorten&&(t=function(t){const n=t.split("/");return(null===n||void 0===n?void 0:n.pop())||t}(t));let n=t;if(this.offset){const i=function(t,n){const i=(0,r.g)().find((t=>t.name===n)),e=(0,r.f)(null===i||void 0===i?void 0:i.currentTimeOffsetInMinutes);return"".concat(t).concat(e)}(this.i18n("UTC"),this.timeZoneId);n="".concat(t," ").concat(i),this.surroundOffset&&(n="".concat(t," (").concat(i,")"))}return(0,e.h)("span",null,n)}async componentWillLoad(){(0,s.t)(this.root),this.i18n=await(0,o.b)(this.root,r.t)}render(){return(0,e.h)(e.H,null,this.renderZoneDisplay())}get root(){return(0,e.g)(this)}}}}]);
//# sourceMappingURL=8170.556b3691.chunk.js.map